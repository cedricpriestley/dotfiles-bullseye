# Bind new prefix (CTRL+A)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# set -g default-terminal "xterm-256color"
 set -g default-terminal "screen-256color"
# act like vim
setw -g mode-keys vi
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
set -g focus-events on

set-option -sa terminal-overrides ',xterm*:RGB'
# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1
 
# renumber windows sequentially after closing any of them
set -g renumber-windows on
 
# soften status bar color from harsh green to light gray
set -g status-style bg='#666666',fg='#aaaaaa'
 
# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''
set-window-option -g status-right " #S "
 
# Increase scrollback lines
set -g history-limit 10000

# Add mouse support
setw -g mouse off

# Immediately escape on key press
set -sg escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"


is_nnn="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?nnn?x?)(diff)?$'"


bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
 
# Custom keybindings
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"

bind-key | split-window -h
bind-key - split-window -v

bind -n F1 select-pane -t +1 \; resize-pane -Z
bind -n F2 if-shell "$is_vim" "send-keys ',f2'" "send-keys 'F2' Enter"
bind -n F3 if-shell "$is_vim" "send-keys ',f3'" "send-keys ';f'"
bind -n F4 if-shell "$is_vim" "send-keys ',f4'" "send-keys C-r"
bind -n F5 if-shell "$is_vim" "send-keys ',f5'" "send-keys 'n' Enter"
bind -n F6 if-shell "$is_vim" "send-keys ',f6'" "send-keys 'n' Enter"
bind -n F7 if-shell "$is_vim" "send-keys ',f7'" "send-keys 'n' Enter"
bind -n F10 if-shell "$is_vim" "send-keys ',f10'" "send-keys 'n' Enter"

bind -n M-F1 if-shell "$is_vim" "send-keys ',af1'" "select-pane -t +1 \; resize-pane -Z"
bind-key -n M-F2 if-shell "$is_vim" "send-keys ',af2'" "send-keys 'n' Enter"
bind-key -n M-F3 if-shell "$is_vim" "send-keys ',af3'" "send-keys 'fzf'"
bind-key -n M-F4 if-shell "$is_vim" "send-keys ',af4'" "send-keys 'exit' Enter"
bind-key -n M-F5 if-shell "$is_vim" "send-keys ',af5'" "send-keys 'x' Enter"
bind-key -n M-F6 if-shell "$is_vim" "send-keys ',af6'" "send-keys 'x' Enter"
bind-key -n M-F7 if-shell "$is_vim" "send-keys ',af7'" "send-keys 'x' Enter"

bind-key "=" select-layout even-vertical

# bind -n F1 choose-session
# bind -n F2 resize-pane -Z

# bind -n M-F1 resize-pane -Z
# bind -n M-F2 select-window -t :2
# bind -n M-F3 select-window -t :3
# bind -n M-F6 kill-pane
# bind M-F1 detach-client
bind -r TAB next-window
set-option -g repeat-time 0

# set-hook -g session-window-changed 'if-shell $is_vim "run-shell 'swapTouchKeys.sh 2'" "run-shell 'swapTouchKeys.sh 1'"'

# set-hook -g window-pane-changed 'if-shell "$is_vim" "run-shell 'swapTouchKeys.sh 2'" "run-shell 'swapTouchKeys.sh 2'"'

# bind -n M-F1 run-shell "swapTouchKeys.sh 1"
# bind -n M-F2 run-shell "swapTouchKeys.sh 2"
# bind -n M-F3 run-shell "swapTouchKeys.sh 3"

# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
set-option -g status-justify left
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set-option -g status-left-length 16
set-option -g status-bg colour237
set-option -g status-right '#{?pane_synchronized, #[fg=colour196]*SYNC*#[default],}#[bg=colour236] #[bg=colour235]#[fg=colour185] #[bg=colour236] #[bg=colour237] #S #[bg=colour72] '
set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

set-option -g status-interval 60
 
set-option -g pane-border-status bottom
set-option -g pane-border-format "#{pane_index} #{pane_current_command}"
set-option -g pane-active-border-style fg=colour88
set-option -g pane-border-style fg=colour243
 
# set-hook -g session-window-changed 'if-shell "$is_vim" "swapTouchKeys.sh 1" "swapTouchKeys.sh 2"'
# set-hook -g window-pane-changed 'if-shell "$is_vim" "swapTouchKeys.sh 1" "swapTouchKeys.sh 2"'

# Tmux Plugin Manager
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'arcticicestudio/nord-tmux'

# set -g @continuum-boot 'on'
# set -g @continuum-restore 'on'

# set -g @resurrect-save '-'
# set -g @resurrect-restore '_' 

# keep at bottom
run -b '~/.tmux/plugins/tpm/tpm'
